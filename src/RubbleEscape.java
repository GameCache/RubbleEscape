import game.Game;
import gui.GameManager;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import javax.swing.JApplet;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 * Runs the game. Will run as an application when packaged as a runnable jar.
 * The same runnable jar can be run as an applet by inserting the following code
 * into an html page's applet tag:
 * 
 * CODE = "RubbleEscape.class" ARCHIVE = "RubbleEscape.jar" WIDTH = 640 HEIGHT =
 * 480
 * 
 * @author Jesse Brent
 * @version 1.0, 10/01/10
 */
public final class RubbleEscape extends JApplet {

	/** Serialization field generated by Eclipse. */
	private static final long serialVersionUID = 5962671769883967390L;

	/** The name of the game. */
	private static final String TITLE_NAME = "Rubble Escape";

	/** The thread used to run the game. */
	private transient Thread running;

	/** The game. */
	private GameManager game;

	/**
	 * Loads up the applet game in an application.
	 * 
	 * @param args
	 *            Command-line arguments. Ignored.
	 */
	public static void main(String[] args) {

		// Execute a job on the event-dispatching thread; creating the
		// application's GUI.
		try {
			SwingUtilities.invokeAndWait(new Runnable() {
				/*
				 * {@inheritDoc}
				 * 
				 * @see java.lang.Runnable#run()
				 */
				@Override
				public void run() {
					runAsApplication();
				}
			});
		} catch (Exception error) {
			error.printStackTrace();
		}
	}

	/**
	 * Creates an application frame to hold the application.
	 */
	private static void runAsApplication() {
		final JFrame frame = new JFrame(TITLE_NAME);
		frame.setIconImage(GameManager.loadImage("Icon.png"));
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setBackground(Color.BLACK);
		frame.setForeground(Color.WHITE);
		frame.setIgnoreRepaint(true);
		frame.setResizable(true);

		final GameManager game = new GameManager();
		game.setPreferredSize(new Dimension(Game.GAME_WIDTH, Game.GAME_HEIGHT));
		game.setIgnoreRepaint(true);
		game.setFocusable(true);

		frame.getContentPane().setLayout(new BorderLayout());
		frame.getContentPane().add(game, BorderLayout.CENTER);

		frame.pack();
		frame.setLocationRelativeTo(null);
		frame.setVisible(true);

		new Thread(game).start();
	}

	/*
	 * Called the first time loading the site.
	 * 
	 * {@inheritDoc}
	 * 
	 * @see java.applet.Applet#init()
	 */
	@Override
	public void init() {
		super.init();

		// Execute a job on the event-dispatching thread; creating this applet's
		// GUI.
		try {
			SwingUtilities.invokeAndWait(new Runnable() {
				/*
				 * {@inheritDoc}
				 * 
				 * @see java.lang.Runnable#run()
				 */
				@Override
				public void run() {
					runAsApplet();
				}
			});
		} catch (Exception error) {
			error.printStackTrace();
		}
	}

	/**
	 * For the event-dispatching thread to setup the applet's GUI.
	 */
	protected void runAsApplet() {
		this.setBackground(Color.BLACK);
		this.setForeground(Color.WHITE);
		this.setIgnoreRepaint(true);
		this.setSize(Game.GAME_WIDTH, Game.GAME_HEIGHT);
		this.setPreferredSize(new Dimension(Game.GAME_WIDTH, Game.GAME_HEIGHT));

		game = new GameManager();
		game.setIgnoreRepaint(true);
		game.setFocusable(true);

		this.getContentPane().setLayout(new BorderLayout());
		this.getContentPane().add(game, BorderLayout.CENTER);
	}

	/*
	 * Called every time loading the site.
	 * 
	 * {@inheritDoc}
	 * 
	 * @see java.applet.Applet#start()
	 */
	@Override
	public void start() {
		super.start();
		running = new Thread(game);
		running.start();
	}

	/*
	 * Called when leaving the site.
	 * 
	 * {@inheritDoc}
	 * 
	 * @see java.applet.Applet#stop()
	 */
	@Override
	public void stop() {
		super.stop();
		if (running != null) {
			running.interrupt();
			running = null;
		}
	}

}
